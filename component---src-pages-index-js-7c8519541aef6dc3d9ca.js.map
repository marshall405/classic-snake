{"version":3,"sources":["webpack:///./src/components/GameSettings.js","webpack:///./src/components/Canvas.js","webpack:///./src/components/DrawSnake.js","webpack:///./src/components/CreateSquare.js","webpack:///./src/components/Snake.js","webpack:///./src/components/KeyEvents.js","webpack:///./src/components/updateScore.js","webpack:///./src/components/Food.js","webpack:///./src/components/SetupGame.js","webpack:///./src/components/isValidMove.js","webpack:///./src/components/didEatFood.js","webpack:///./src/components/addOne.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["GameSettings","walls","speed","CanvasSettings","width","height","style","background","border","backgroundColor","SnakeSettings","fillColor","strokeColor","startLength","FoodSettings","Canvas","_GameSettings$CanvasS","react_default","a","createElement","id","DrawItem","item","ctx","strokeStyle","fillStyle","body","forEach","sec","strokeRect","x","y","fillRect","CreateSquare","w","h","Snake","canvasHeight","startYPos","startXPos","i","unshift","direction","moveAgain","moving","ArrowRight","popped","this","pop","ArrowLeft","ArrowUp","ArrowDown","KeyEvents","snake","window","addEventListener","e","key","updateScore","currentScore","document","getElementById","innerText","Food","canvas","random","Math","push","move","SetupGame","moveSnake","getContext","score","food","clearInterval","setInterval","clearRect","snakeHead","wallDetection","itselfDetection","every","snakePiece","index","isValidMove","didEatFood","createSquare","length","snakeTail","addOne","console","log","IndexPage","useEffect","layout","seo","title","keywords","textAlign","components_Canvas","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","Header","siteTitle","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","header","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-7c8519541aef6dc3d9ca.js","sourcesContent":["const GameSettings = {\n    walls: true,\n    speed: 50,\n    CanvasSettings: {\n        width: 600,\n        height: 600,\n        style: {\n            background: '#fefefe',\n            border: '1px solid black',\n            backgroundColor: 'lightgreen'\n        },\n    },\n    SnakeSettings: {\n        width: 20,\n        height: 20,\n\n        fillColor: 'black',\n        strokeColor: 'white',\n        startLength: 4,\n    },\n    FoodSettings: {\n        width: 20,\n        height: 20,\n        fillColor: 'red',\n        strokeColor: 'white',\n    },\n}\nexport default GameSettings;","import React from 'react';\nimport GameSettings from './GameSettings';\nconst Canvas = () => {\n    const { width, height, style } = GameSettings.CanvasSettings;\n    return (\n        <canvas\n            width={width}\n            height={height}\n            style={style}\n            id='canvas'>\n        </canvas>\n    )\n}\nexport default Canvas;\n","const DrawItem = (item, ctx) => {\n    ctx.strokeStyle = item.strokeColor;\n    ctx.fillStyle = item.fillColor;\n    item.body.forEach(sec => {\n        ctx.strokeRect(sec.x, sec.y, sec.width, sec.height);\n        ctx.fillRect(sec.x, sec.y, sec.width, sec.height);\n    });\n}\n\nexport default DrawItem;","const CreateSquare = (x, y, w = 20, h = 20) => {\n    return {\n        x: x,\n        y: y,\n        width: w,\n        height: h\n    }\n}\nexport default CreateSquare;","import CreateSquare from './CreateSquare';\nconst Snake = (SnakeSettings, canvasHeight) => {\n    const body = [];\n    const { width, height, fillColor, strokeColor, speed, startLength } = SnakeSettings;\n    let startYPos = (canvasHeight / 2);\n    let startXPos = 0;\n    // create initial snake with Snake.length (default 4)\n    for (let i = 0; i < startLength; i++) {\n        // add starting squares to snake body\n        body.unshift(CreateSquare(startXPos, startYPos, width, height));\n        startXPos += width;\n    }\n    return {\n        body: body,\n        direction: 'ArrowRight',\n        moveAgain: false,\n        moving: false,\n        speed: speed,\n        fillColor: fillColor,\n        strokeColor: strokeColor,\n        ArrowRight: function () {\n            let popped = this.body.pop();\n            popped.x = (this.body[0].x + popped.width);\n            popped.y = this.body[0].y;\n            this.body.unshift(popped);\n        },\n        ArrowLeft: function () {\n            let popped = this.body.pop();\n            popped.x = (this.body[0].x - popped.width);\n            popped.y = this.body[0].y;\n            this.body.unshift(popped);\n        },\n        ArrowUp: function () {\n            let popped = this.body.pop();\n            popped.y = (this.body[0].y - popped.width);\n            popped.x = this.body[0].x;\n            this.body.unshift(popped);\n        },\n        ArrowDown: function () {\n            let popped = this.body.pop();\n            popped.y = (this.body[0].y + popped.width);\n            popped.x = this.body[0].x;\n            this.body.unshift(popped);\n        },\n    }\n}\n\nexport default Snake;","// set arrow key listener events\nexport default (snake) => {\n    window.addEventListener('keydown', e => {\n        const key = e.key;\n        if (key === 'ArrowRight' || key === 'ArrowLeft' || key === 'ArrowUp' || key === 'ArrowDown') {\n            if (key !== snake.direction && snake.moving) {\n                // if snake is going left or right, only move snake up or down\n                if (key === 'ArrowLeft' || key === 'ArrowRight') {\n                    if (snake.direction !== 'ArrowLeft' && snake.direction !== 'ArrowRight') {\n                        // call ArrowUp or ArrowDown method on snake object\n                        snake[key]();\n                        //set direction to continue moving snake\n                        snake.direction = key;\n                        // prevent interval from moving snake again\n                        snake.moveAgain = false;\n                    }\n                } // end if for left and right\n\n                // if snake is going up or down, only move snake left or right\n                if (key === 'ArrowDown' || key === 'ArrowUp') {\n                    if (snake.direction !== 'ArrowUp' && snake.direction !== 'ArrowDown') {\n                        // call ArrowLeft or ArrowRight method on snake object\n                        snake[key]();\n                        //set direction to continue moving snake\n                        snake.direction = key;\n                        // prevent interval from moving snake again\n                        snake.moveAgain = false;\n                    }\n                } // end if for up and down\n            }\n        }\n    })\n}","export default (currentScore) => {\n    const score = document.getElementById('score');\n    score.innerText = `Score: ${currentScore}`;\n}","const Food = (FoodSettings, canvas) => {\n\n    function random() {\n        const random = Math.random() * canvas.width;\n        return random - (random % 20);\n    }\n    const body = [];\n    const { width, height, fillColor, strokeColor } = FoodSettings;\n\n    // starting food (1)\n    body.push({ x: random(), y: random(), width, height });\n\n    return {\n        body,\n        fillColor,\n        strokeColor,\n        move: function () {\n            this.body[0].x = random();\n            this.body[0].y = random();\n        }\n    }\n};\n\nexport default Food;","// setup new game and wait for space bar input to begin\nimport DrawItem from './DrawSnake';\n\n// Snake function returns new Snake object \nimport Snake from './Snake';\n// import game settings Snake and Food from GameSettings\nimport GameSettings from './GameSettings';\nimport KeyEvents from './KeyEvents';\nimport isValidMove from './isValidMove';\nimport CreateSquare from './CreateSquare';\nimport updateScore from './updateScore.js';\nimport addOne from './addOne';\nimport didEatFood from './didEatFood';\nimport Food from './Food';\n\nconst SetupGame = () => {\n    const { SnakeSettings, FoodSettings } = GameSettings;\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    let score = 0;\n    let snake = Snake(SnakeSettings, canvas.height);\n    let food = Food(FoodSettings, canvas);\n\n    // set event listeners to specific keys \n    KeyEvents(snake, ctx, DrawItem, canvas);\n\n    // initial rendering of snake and food\n    DrawItem(snake, ctx);\n    DrawItem(food, ctx);\n    // moveSnake will hold the interval\n    let moveSnake;\n\n\n\n    // spacebar starts or pauses game\n    window.addEventListener('keydown', e => {\n        if (e.key === \" \") {\n            if (snake.moving) {\n                // pause snake\n                snake.moving = false;\n                clearInterval(moveSnake);\n            } else {\n                snake.moving = true;\n                //start moving snake\n                moveSnake = setInterval(() => {\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    if (snake.moveAgain) {\n                        snake[snake.direction]();\n                    }\n                    if (isValidMove(snake, canvas)) {\n                        if (didEatFood(snake.body, food.body)) {\n                            score++;\n                            updateScore(score);\n                            addOne(snake, CreateSquare);\n                            food.move();\n                        }\n                        snake.moveAgain = true;\n                        DrawItem(snake, ctx);\n                        DrawItem(food, ctx);\n                    } else {\n                        //Game Over \n                        console.log('game over???');\n                        clearInterval(moveSnake);\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        snake = Snake(SnakeSettings, canvas.height);\n                        food = Food(FoodSettings, canvas)\n                        DrawItem(snake, ctx);\n                        DrawItem(food, ctx);\n                        KeyEvents(snake);\n                        score = 0;\n                        updateScore(score);\n                    }\n                }, GameSettings.speed);\n            }\n        }\n    })\n\n\n\n\n\n    // add key listening events\n    // everytime we hit a key, fire method in snake object and redraw canvas\n\n\n}\n\nexport default SetupGame;","export default (snake, canvas) => {\n    const snakeHead = snake.body[0];\n    const wallDetection = (snakeHead.x + snakeHead.width <= canvas.width && snakeHead.x >= 0) && (snakeHead.y + snakeHead.height <= canvas.height && snakeHead.y >= 0);\n    const itselfDetection = snake.body.every((snakePiece, index) => {\n        if (index !== 0) {\n            return (snakePiece.x !== snakeHead.x || snakePiece.y !== snakeHead.y);\n        }\n        return true;\n    });\n    return (wallDetection && itselfDetection);\n}","export default (snake, food) => {\n    return (snake[0].x === food[0].x) && (snake[0].y === food[0].y);\n}","export default (snake, createSquare) => {\n    let length = snake.body.length;\n    let snakeTail = snake.body[length - 1];\n    snake.body.push(createSquare(snakeTail.x, snakeTail.y, snakeTail.width, snakeTail.height));\n}","import React, { useEffect } from \"react\"\nimport Canvas from '../components/Canvas';\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport SetupGame from '../components/SetupGame';\n\nconst IndexPage = () => {\n  useEffect(() => {\n    SetupGame();\n  })\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      <h1 id='score'> Score: 0</h1>\n      <div style={{ width: '100%', textAlign: 'center' }}>\n        <Canvas />\n        <p> Press Spacebar to Start </p>\n      </div>\n    </Layout>\n  )\n}\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}